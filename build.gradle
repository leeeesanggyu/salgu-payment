plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.salgu'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'com.mysql:mysql-connector-j'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// querydsl start
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	// querydsl end

	// aop logger start
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-configuration-processor:2.5.5'
	implementation 'com.google.guava:guava:29.0-jre'
	implementation 'org.apache.commons:commons-lang3:3.11'
	implementation 'org.apache.poi:poi:3.17'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'org.apache.httpcomponents:httpcore:4.4.14'
	// aop logger end
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(Copy).all {
	duplicatesStrategy 'exclude'
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
	main.java.srcDirs += [ generated ]
}

clean {
	delete file(generated)
}